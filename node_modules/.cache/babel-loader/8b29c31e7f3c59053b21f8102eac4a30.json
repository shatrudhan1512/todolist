{"ast":null,"code":"var _jsxFileName = \"C:\\\\Function Up\\\\React.js\\\\todolist.github.io\\\\src\\\\ToDoList\\\\toDoList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport './toDoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ToDoList() {\n  _s();\n\n  const [toDoList, setToDoList] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [editValue, setEditValue] = useState(\"\");\n  const [deletedList, setDeletedList] = useState([]);\n\n  function addTaskList() {\n    if (!value) return;\n    let addTask = {\n      id: Date.now(),\n      task: value,\n      isCompleted: false,\n      saveUndoData: false,\n      editing: false,\n      isDeleted: false,\n      isUndo: false,\n      isRedo: false,\n      undo: [],\n      redo: []\n    };\n    setToDoList([...toDoList, addTask]);\n    setValue(\"\");\n  }\n\n  function onChnageHandle(event) {\n    setValue(event.target.value.trim());\n  }\n\n  function editOnChnageHandle(event) {\n    setEditValue(event.target.value.trim());\n  }\n\n  function completeTask(id) {\n    let cmtTask = toDoList.find(element => element.id === id);\n    cmtTask.isCompleted = true;\n    setToDoList([...toDoList]);\n  }\n\n  function removeTask(id) {\n    setToDoList(toDoList.filter(element => element.id !== id));\n    const remove = toDoList.find(element => element.id === id);\n    remove.isDeleted = true;\n    setDeletedList([...deletedList, remove]);\n  }\n\n  function editTask(id) {\n    let editTask = toDoList.find(element => element.id === id);\n\n    if (!editTask.isCompleted) {\n      editTask.editing = true;\n      editTask.isUndo = false;\n      editTask.isRedo = false;\n      editTask.undo.push(editTask.task);\n      setToDoList([...toDoList]);\n    }\n  }\n\n  function saveTask(id) {\n    let editTask = toDoList.find(element => element.id === id);\n    editTask.editing = false;\n    editTask.isUndo = true;\n    editTask.task = editValue;\n    editTask.isRedo = true;\n    setToDoList([...toDoList]);\n  }\n\n  function undoTask(id) {\n    const undoData = toDoList.find(element => element.id === id);\n\n    if (undoData.undo.length > 0) {\n      const lastElement = undoData.undo.pop();\n      undoData.redo.push(undoData.task);\n      undoData.task = lastElement;\n      setToDoList([...toDoList]);\n    }\n  }\n\n  function redoTask(id) {\n    const redoData = toDoList.find(element => element.id === id);\n\n    if (redoData.redo.length > 0) {\n      const lastElement = redoData.redo.pop();\n      redoData.undo.push(redoData.task);\n      redoData.task = lastElement;\n      setToDoList([...toDoList]);\n    }\n  }\n\n  function deletedUndoTask(id) {\n    const undoTask = deletedList.find(element => element.id === id);\n    undoTask.isDeleted = false;\n    setToDoList([...toDoList, undoTask]);\n    deletedList.splice(deletedList.indexOf(undoTask), 1);\n    setDeletedList([...deletedList]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"New To DO List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `Pending Task (${toDoList.filter(element => !element.isCompleted).length})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), toDoList.map(toDoElement => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divContainer\",\n        children: [toDoElement.editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"editTaskInp\",\n          onChange: editOnChnageHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 48\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"spanId\",\n          contentEditable: toDoElement.editing,\n          style: {\n            textDecoration: toDoElement.isCompleted ? 'line-through' : ''\n          },\n          children: toDoElement.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnComplete\",\n          onClick: () => completeTask(toDoElement.id),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnX\",\n          onClick: () => removeTask(toDoElement.id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnEdit\",\n          onClick: () => editTask(toDoElement.id),\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), toDoElement.editing && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"saveBtn\",\n          onClick: () => saveTask(toDoElement.id),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 49\n        }, this), toDoElement.isUndo && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnUndo\",\n          onClick: () => undoTask(toDoElement.id),\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 48\n        }, this), toDoElement.isRedo && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnRedo\",\n          onClick: () => redoTask(toDoElement.id),\n          children: \"Redo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inpDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"addTaskInp\",\n          value: value,\n          placeholder: \"Add a New Task\",\n          onChange: onChnageHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addTaskBtn\",\n          onClick: addTaskList,\n          children: \"Add List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delTaskContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), deletedList.map(deletedElement => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delTask\",\n        children: [deletedElement.isDeleted && /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"delSpanId\",\n          children: deletedElement.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 54\n        }, this), deletedElement.isDeleted && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"undoBtn\",\n          onClick: () => deletedUndoTask(deletedElement.id),\n          children: \"undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDoList, \"EQGLW56Svzpg3NQr5xb1SCG+6nI=\");\n\n_c = ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["C:/Function Up/React.js/todolist.github.io/src/ToDoList/toDoList.js"],"names":["useState","ToDoList","toDoList","setToDoList","value","setValue","editValue","setEditValue","deletedList","setDeletedList","addTaskList","addTask","id","Date","now","task","isCompleted","saveUndoData","editing","isDeleted","isUndo","isRedo","undo","redo","onChnageHandle","event","target","trim","editOnChnageHandle","completeTask","cmtTask","find","element","removeTask","filter","remove","editTask","push","saveTask","undoTask","undoData","length","lastElement","pop","redoTask","redoData","deletedUndoTask","splice","indexOf","map","toDoElement","textDecoration","deletedElement"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport './toDoList.css'\r\n\r\nexport function ToDoList() {\r\n\r\n    const [toDoList, setToDoList] = useState([])\r\n    const [value, setValue] = useState(\"\")\r\n    const [editValue, setEditValue] = useState(\"\")\r\n    const [deletedList, setDeletedList] = useState([]) \r\n\r\n    function addTaskList() {\r\n        if (!value)\r\n            return\r\n\r\n        let addTask = { \r\n            id: Date.now(),\r\n            task: value,\r\n            isCompleted: false,\r\n            saveUndoData: false,\r\n            editing: false,\r\n            isDeleted: false,\r\n            isUndo: false,\r\n            isRedo:false, \r\n            undo:[],\r\n            redo:[]\r\n        }\r\n        setToDoList([...toDoList, addTask])\r\n        setValue(\"\")\r\n    }\r\n    function onChnageHandle(event) {\r\n        setValue((event.target.value).trim())\r\n    }\r\n    function editOnChnageHandle(event) {\r\n        setEditValue((event.target.value).trim())\r\n\r\n    }\r\n    function completeTask(id) {\r\n        let cmtTask = toDoList.find(element => element.id === id)\r\n        cmtTask.isCompleted = true\r\n        setToDoList([...toDoList])\r\n    }\r\n    function removeTask(id) {\r\n\r\n        setToDoList(toDoList.filter(element => element.id !== id))\r\n        const remove = toDoList.find(element => element.id === id)\r\n        remove.isDeleted = true\r\n        setDeletedList([...deletedList, remove])\r\n    }\r\n    function editTask(id) {\r\n        let editTask = toDoList.find(element => element.id === id)\r\n        if(!editTask.isCompleted) {\r\n            editTask.editing = true\r\n            editTask.isUndo = false\r\n            editTask.isRedo = false\r\n           editTask.undo.push(editTask.task)\r\n            setToDoList([...toDoList])\r\n        }\r\n       \r\n    }\r\n    function saveTask(id) {\r\n        \r\n        let editTask = toDoList.find(element => element.id === id)\r\n        editTask.editing = false\r\n        editTask.isUndo = true\r\n        editTask.task = editValue\r\n        editTask.isRedo = true\r\n        setToDoList([...toDoList])  \r\n\r\n    }\r\n    function undoTask(id) {\r\n        const undoData = toDoList.find(element => element.id === id)\r\n        \r\n        if(undoData.undo.length >0) {\r\n            const lastElement = undoData.undo.pop()\r\n            undoData.redo.push((undoData.task))\r\n            undoData.task = lastElement\r\n            setToDoList([...toDoList])\r\n        }\r\n    }\r\n\r\n    function redoTask(id){\r\n        const redoData = toDoList.find(element => element.id === id)\r\n        if(redoData.redo.length >0) {\r\n            const lastElement = redoData.redo.pop()\r\n            redoData.undo.push((redoData.task))\r\n            redoData.task = lastElement\r\n            setToDoList([...toDoList])\r\n        }\r\n    }\r\n    \r\n\r\n    function deletedUndoTask(id) {\r\n        const undoTask = deletedList.find(element => element.id === id)\r\n        undoTask.isDeleted = false\r\n        setToDoList([...toDoList, undoTask])\r\n        deletedList.splice(deletedList.indexOf(undoTask), 1)\r\n        setDeletedList([...deletedList])\r\n    }\r\n    return (\r\n        <body >\r\n        \r\n            <div className=\"container\" >\r\n                <h1>New To DO List</h1>\r\n\r\n                <h2>{`Pending Task (${toDoList.filter(element => !element.isCompleted).length})`}</h2>\r\n\r\n\r\n                {toDoList.map(toDoElement =>\r\n                    <div className=\"divContainer\">\r\n                        {toDoElement.editing ? <input type='text' className=\"editTaskInp\" onChange={editOnChnageHandle} /> :\r\n                         <span id='spanId' contentEditable={toDoElement.editing} style={{ textDecoration: toDoElement.isCompleted ? 'line-through' : '' }} >{toDoElement.task}</span>}\r\n                       \r\n                        <button className=\"btnComplete\" onClick={() => completeTask(toDoElement.id)}>Complete</button>\r\n                        <button className=\"btnX\" onClick={() => removeTask(toDoElement.id)}>x</button>\r\n                        <button className=\"btnEdit\" onClick={() => editTask(toDoElement.id)}>edit</button>\r\n\r\n                        {toDoElement.editing && <button className=\"saveBtn\" onClick={() => saveTask(toDoElement.id)}>Save</button>}\r\n                        {toDoElement.isUndo && <button className=\"btnUndo\" onClick={() => undoTask(toDoElement.id)}>Undo</button>}\r\n                        {toDoElement.isRedo && <button className=\"btnRedo\" onClick={() => redoTask(toDoElement.id)}>Redo</button>}\r\n\r\n                    </div>)\r\n                }\r\n\r\n                <div className=\"inpDiv\">\r\n                    <input type='text' className=\"addTaskInp\" value={value} placeholder=\"Add a New Task\" onChange={onChnageHandle} />\r\n                    <button className=\"addTaskBtn\" onClick={addTaskList}>Add List</button>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"delTaskContainer\">\r\n            <h1>Trash</h1>\r\n                {deletedList.map(deletedElement =>\r\n                    <div className=\"delTask\" >   \r\n                        {deletedElement.isDeleted && <span id=\"delSpanId\">{deletedElement.task}</span>}\r\n                        {deletedElement.isDeleted && <button className=\"undoBtn\" onClick={() => deletedUndoTask(deletedElement.id)}>undo</button>}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </body>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}